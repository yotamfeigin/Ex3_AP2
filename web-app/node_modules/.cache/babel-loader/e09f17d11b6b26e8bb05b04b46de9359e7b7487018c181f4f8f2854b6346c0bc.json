{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuval\\\\Documents\\\\GitHub\\\\ex2_mitkadem2\\\\web-app\\\\src\\\\chat\\\\SendBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport $ from 'jquery';\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendBox(_ref) {\n  _s();\n  let {\n    chatList,\n    setCurrentChatList,\n    currentUser,\n    currentChat,\n    contacts,\n    setCurrenChat\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const handleTextChange = event => {\n    setMessage(event.target.value);\n  };\n  const nextVersion = event => {\n    alert(\"This feature is only for premium users right now..\");\n  };\n  const sendMessage = event => {\n    if (message === \"\") {\n      return;\n    }\n    if (currentChat == \"\") {\n      return;\n    }\n    var newChat = chatList;\n    var newMessage = message.slice();\n    newChat.push({\n      text: newMessage,\n      sender: \"send\",\n      time: new Date().toLocaleTimeString()\n    });\n    setCurrentChatList(prevChat => [...prevChat, newMessage]);\n    const contact = contacts.find(contact => contact.name === currentChat);\n    let index = contacts.indexOf(contact);\n    contacts.splice(index, 1);\n    contacts.unshift(contact);\n    contact.chatList = chatList;\n    $(\"#send\").val(\"\");\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"send_message\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleTextChange,\n      className: \"form-control rounded-0\",\n      id: \"send\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter your message here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-light btn-sm textColor\",\n      id: \"send_btn\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-light btn-sm textColor\",\n      id: \"send_btn\",\n      disabled: true,\n      onClick: nextVersion,\n      children: [\"Attach A File  \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"(this feature will be available in the next update)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(SendBox, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = SendBox;\nexport default SendBox;\nvar _c;\n$RefreshReg$(_c, \"SendBox\");","map":{"version":3,"names":["useEffect","useState","$","render","jsxDEV","_jsxDEV","SendBox","_ref","_s","chatList","setCurrentChatList","currentUser","currentChat","contacts","setCurrenChat","message","setMessage","handleTextChange","event","target","value","nextVersion","alert","sendMessage","newChat","newMessage","slice","push","text","sender","time","Date","toLocaleTimeString","prevChat","contact","find","name","index","indexOf","splice","unshift","val","id","children","type","onChange","className","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/chat/SendBox.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport $ from 'jquery';\r\nimport { render } from \"react-dom\";\r\n\r\nfunction SendBox({chatList, setCurrentChatList, currentUser, currentChat, contacts, setCurrenChat}) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleTextChange = (event) => {\r\n        setMessage(event.target.value);\r\n    }\r\n\r\n    const nextVersion = (event) => {\r\n        alert(\"This feature is only for premium users right now..\");\r\n    }\r\n\r\n  \r\n\r\n    const sendMessage = (event) => {\r\n        if(message === \"\") {\r\n            return;\r\n        }\r\n        if(currentChat ==\"\"){\r\n            return;\r\n        }\r\n        var newChat = chatList;\r\n        var newMessage = message.slice();\r\n        newChat.push({text:newMessage, sender:\"send\", time: new Date().toLocaleTimeString()});\r\n        setCurrentChatList((prevChat) => [...prevChat, newMessage]);\r\n        const contact = contacts.find(contact => contact.name === currentChat);\r\n        let index = contacts.indexOf(contact);\r\n        contacts.splice(index,1);\r\n        contacts.unshift(contact);\r\n        contact.chatList = chatList;\r\n        $(\"#send\").val(\"\");\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"send_message\">\r\n            <input type=\"text\"  onChange={handleTextChange} className=\"form-control rounded-0\" id=\"send\" aria-describedby=\"emailHelp\" placeholder=\"Enter your message here...\" />\r\n            <button type=\"button\" className=\"btn btn-outline-light btn-sm textColor\" id=\"send_btn\" onClick={sendMessage}>\r\n                Send\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-outline-light btn-sm textColor\" id=\"send_btn\" disabled onClick={nextVersion}>\r\n                Attach A File  <small>(this feature will be available in the next update)</small>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default SendBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}