{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuval\\\\Documents\\\\GitHub\\\\ex2_mitkadem2\\\\web-app\\\\src\\\\chat\\\\Contact.js\";\nimport { formatDate, breakLongWord } from \"../register/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact(_ref) {\n  let {\n    picture,\n    name,\n    setCurrentChat,\n    setCurrentPicture,\n    token,\n    id,\n    setMessages,\n    setChatId,\n    chatId,\n    lastMessage,\n    setContacts\n  } = _ref;\n  const handleClick = async event => {\n    setCurrentChat(name);\n    setCurrentPicture(picture);\n    await setChatId(id);\n    getMessages();\n  };\n  const getMessages = async event => {\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}/Messages`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (res.ok) {\n      const messages = await res.json();\n      setMessages(messages);\n    } else {\n      alert(\"Unable to fetch messages\");\n    }\n  };\n  const deleteContact = async event => {\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    await getChats();\n    setCurrentChat(\"\");\n    setCurrentPicture(\"logo.jpg\");\n    await setChatId(0);\n    await setMessages([]);\n  };\n  const getChats = async event => {\n    const newChatList = await fetch(`http://localhost:5000/api/Chats`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const chatJson = await newChatList.json();\n    setContacts(chatJson);\n  };\n  if (!lastMessage) {\n    lastMessage = {\n      content: \"no messages yet\",\n      created: \"\"\n    };\n  }\n  if (lastMessage.content.length > 40) {\n    lastMessage.content = lastMessage.content.slice(0, 40) + \"...\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact_profile\",\n    id: \"contact_profile_main\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      alt: \"profile picture\",\n      className: \"chat_profile_picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name_last_seen\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"textColor contacts_chat\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last_message\",\n        children: lastMessage.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last_seen\",\n        children: formatDate(lastMessage.created)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-light btn-sm textColor\",\n      id: \"delete_contact\",\n      onClick: deleteContact,\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["formatDate","breakLongWord","jsxDEV","_jsxDEV","Contact","_ref","picture","name","setCurrentChat","setCurrentPicture","token","id","setMessages","setChatId","chatId","lastMessage","setContacts","handleClick","event","getMessages","res","fetch","method","headers","ok","messages","json","alert","deleteContact","getChats","newChatList","chatJson","content","created","length","slice","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/chat/Contact.js"],"sourcesContent":["import { formatDate, breakLongWord } from \"../register/functions\";\r\n\r\nfunction Contact({ picture, name, setCurrentChat, setCurrentPicture,  token, id, setMessages, setChatId, chatId, lastMessage, setContacts }) {\r\n  const handleClick = async (event) => {\r\n     setCurrentChat(name);\r\n     setCurrentPicture(picture);\r\n    await setChatId(id);\r\n    getMessages();\r\n  };\r\n\r\n  const getMessages = async (event) => {\r\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}/Messages`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    });\r\n\r\n    if (res.ok) {\r\n      const  messages  = await res.json();\r\n      setMessages(messages);\r\n    } else {\r\n      alert(\"Unable to fetch messages\");\r\n    }\r\n  };\r\n\r\n  const deleteContact = async (event) => {  \r\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    });\r\n    await getChats();\r\n    setCurrentChat(\"\");\r\n     setCurrentPicture(\"logo.jpg\");\r\n    await setChatId(0);\r\n    await setMessages([]);\r\n  }\r\n\r\n  const getChats = async (event) => {\r\n    const newChatList = await fetch(`http://localhost:5000/api/Chats`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    const chatJson = await newChatList.json();\r\n    setContacts(chatJson);\r\n  }\r\n\r\n  \r\n\r\n  if(!lastMessage){\r\n    lastMessage = {\r\n      content: \"no messages yet\",\r\n      created: \"\"\r\n    }\r\n  }\r\n  if(lastMessage.content.length > 40){\r\n    lastMessage.content = lastMessage.content.slice(0, 40) + \"...\";\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"contact_profile\" id=\"contact_profile_main\" onClick={handleClick}>\r\n      <img src={picture} alt=\"profile picture\" className=\"chat_profile_picture\" />\r\n      <div className=\"name_last_seen\">\r\n        <b className=\"textColor contacts_chat\">{name}</b>\r\n\r\n            <p className=\"last_message\">{lastMessage.content}</p>\r\n            <p className=\"last_seen\">{formatDate(lastMessage.created)}</p>\r\n          \r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-outline-light btn-sm textColor\" id=\"delete_contact\" onClick={deleteContact} >\r\n        delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}