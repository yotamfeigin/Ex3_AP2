{"ast":null,"code":"export default function validatePassword(password){// Check if password is at least 8 characters long\nif(password.length<8){return'length';}// Check if password contains at least one uppercase letter\nvar hasUpperCase=/[A-Z]/.test(password);if(!hasUpperCase){return'upper';}// Check if password contains at least one lowercase letter\nvar hasLowerCase=/[a-z]/.test(password);if(!hasLowerCase){return'lower';}// Check if password contains at least one digit\nvar hasDigit=/\\d/.test(password);if(!hasDigit){return'digit';}// Check if password contains at least one special character\nvar hasSpecialCharacter=/[-!@#$%^&*()_+|[\\]{};:/<>,.?]/.test(password);if(!hasSpecialCharacter){return'special';}// If password passes all checks, return true\nreturn'fine';}","map":{"version":3,"names":["validatePassword","password","length","hasUpperCase","test","hasLowerCase","hasDigit","hasSpecialCharacter"],"sources":["C:/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/register/functions.js"],"sourcesContent":[" export  default function validatePassword(password) {\r\n    // Check if password is at least 8 characters long\r\n    if (password.length < 8) {\r\n      return 'length';\r\n    }\r\n  \r\n    // Check if password contains at least one uppercase letter\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    if (!hasUpperCase) {\r\n      return 'upper';\r\n    }\r\n  \r\n    // Check if password contains at least one lowercase letter\r\n    const hasLowerCase = /[a-z]/.test(password);\r\n    if (!hasLowerCase) {\r\n      return 'lower';\r\n    }\r\n  \r\n    // Check if password contains at least one digit\r\n    const hasDigit = /\\d/.test(password);\r\n    if (!hasDigit) {\r\n      return 'digit';\r\n    }\r\n  \r\n    // Check if password contains at least one special character\r\n    const hasSpecialCharacter = /[-!@#$%^&*()_+|[\\]{};:/<>,.?]/.test(password);\r\n    if (!hasSpecialCharacter) {\r\n      return 'special';\r\n    }\r\n  \r\n    // If password passes all checks, return true\r\n    return 'fine';\r\n  }\r\n"],"mappings":"AAAC,cAAgB,SAAS,CAAAA,gBAAgBA,CAACC,QAAQ,CAAE,CACjD;AACA,GAAIA,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAE,CACvB,MAAO,QAAQ,CACjB,CAEA;AACA,GAAM,CAAAC,YAAY,CAAG,OAAO,CAACC,IAAI,CAACH,QAAQ,CAAC,CAC3C,GAAI,CAACE,YAAY,CAAE,CACjB,MAAO,OAAO,CAChB,CAEA;AACA,GAAM,CAAAE,YAAY,CAAG,OAAO,CAACD,IAAI,CAACH,QAAQ,CAAC,CAC3C,GAAI,CAACI,YAAY,CAAE,CACjB,MAAO,OAAO,CAChB,CAEA;AACA,GAAM,CAAAC,QAAQ,CAAG,IAAI,CAACF,IAAI,CAACH,QAAQ,CAAC,CACpC,GAAI,CAACK,QAAQ,CAAE,CACb,MAAO,OAAO,CAChB,CAEA;AACA,GAAM,CAAAC,mBAAmB,CAAG,+BAA+B,CAACH,IAAI,CAACH,QAAQ,CAAC,CAC1E,GAAI,CAACM,mBAAmB,CAAE,CACxB,MAAO,SAAS,CAClB,CAEA;AACA,MAAO,MAAM,CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}