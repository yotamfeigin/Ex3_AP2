{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/login/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport TextInput from '../register/TextInput';\nimport PasswordInput from '../register/PasswordInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage(_ref) {\n  _s();\n  let {\n    setLoginStatus,\n    setCurrentUser,\n    setToken,\n    setContacts\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  let newtoken = '';\n  const navigate = useNavigate();\n  const getChats = async event => {\n    const newChatList = await fetch(`http://localhost:5000/api/Chats`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${newtoken}`\n      }\n    });\n    const chatJson = await newChatList.json();\n    console.log(chatJson);\n    setContacts(chatJson);\n  };\n  const login = async event => {\n    var UserLogin = {\n      username: username,\n      password: password\n    };\n    try {\n      const res = await fetch('http://localhost:12345/api/Tokens', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(UserLogin)\n      });\n      if (res.ok) {\n        const responseJson = await res.json();\n        const newtoken = responseJson.token; // Use the token here\n        const getUserResponse = await fetch(`http://localhost:12345/api/Users/${username}`, {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${newtoken}`\n          }\n        });\n        if (getUserResponse.ok) {\n          const userJson = await getUserResponse.json();\n          // Extract the values from the JSON response\n          const {\n            username,\n            displayName,\n            profilePic\n          } = userJson;\n          // Use the extracted values\n          console.log(username, displayName, profilePic);\n          //   setToken(newtoken)\n          setCurrentUser(userJson);\n          setLoginStatus(true);\n          getChats(newtoken);\n          navigate('/chat');\n        } else {\n          // Handle error cases for GET request\n          console.log('Error:', getUserResponse.status);\n        }\n      } else {\n        // Handle error cases for POST request\n        console.log('Username or password are wrong', res.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          className: \"username-login\",\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(PasswordInput, {\n            className: \"password-login\",\n            password: password,\n            setPassword: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-light btn-sm textColor\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"textColor\",\n          children: [\"Don't have an account yet?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            className: \"textColor\",\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","TextInput","PasswordInput","jsxDEV","_jsxDEV","LoginPage","_ref","_s","setLoginStatus","setCurrentUser","setToken","setContacts","username","setUsername","password","setPassword","newtoken","navigate","getChats","event","newChatList","fetch","method","headers","Authorization","chatJson","json","console","log","login","UserLogin","res","body","JSON","stringify","ok","responseJson","token","getUserResponse","userJson","displayName","profilePic","status","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","to","_c","$RefreshReg$"],"sources":["/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/login/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport TextInput from '../register/TextInput'\r\nimport PasswordInput from '../register/PasswordInput'\r\n\r\nfunction LoginPage ({ setLoginStatus, setCurrentUser, setToken, setContacts }) {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  let newtoken = ''\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const getChats = async event => {\r\n    const newChatList = await fetch(`http://localhost:5000/api/Chats`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${newtoken}`\r\n      }\r\n    })\r\n    const chatJson = await newChatList.json()\r\n    console.log(chatJson)\r\n    setContacts(chatJson)\r\n  }\r\n\r\n  const login = async event => {\r\n    var UserLogin = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:12345/api/Tokens', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(UserLogin)\r\n      })\r\n\r\n      if (res.ok) {\r\n        const responseJson = await res.json()\r\n        const newtoken = responseJson.token // Use the token here\r\n        const getUserResponse = await fetch(\r\n          `http://localhost:12345/api/Users/${username}`,\r\n          {\r\n            method: 'get',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${newtoken}`\r\n            }\r\n          }\r\n        )\r\n\r\n        if (getUserResponse.ok) {\r\n          const userJson = await getUserResponse.json()\r\n          // Extract the values from the JSON response\r\n          const { username, displayName, profilePic } = userJson\r\n          // Use the extracted values\r\n          console.log(username, displayName, profilePic)\r\n          //   setToken(newtoken)\r\n          setCurrentUser(userJson)\r\n          setLoginStatus(true)\r\n          getChats(newtoken)\r\n          navigate('/chat')\r\n        } else {\r\n          // Handle error cases for GET request\r\n          console.log('Error:', getUserResponse.status)\r\n        }\r\n      } else {\r\n        // Handle error cases for POST request\r\n        console.log('Username or password are wrong', res.status)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className='login'>\r\n        <form className='login'>\r\n          <TextInput\r\n            className='username-login'\r\n            username={username}\r\n            setUsername={setUsername}\r\n          />\r\n          <div className='form-group'>\r\n            <PasswordInput\r\n              className='password-login'\r\n              password={password}\r\n              setPassword={setPassword}\r\n            />\r\n          </div>\r\n          <button\r\n            type='button'\r\n            className='btn btn-outline-light btn-sm textColor'\r\n            onClick={login}\r\n          >\r\n            Login\r\n          </button>{' '}\r\n          <br />\r\n          <small className='textColor'>\r\n            Don't have an account yet?{' '}\r\n            <Link className='textColor' to='/register'>\r\n              Register\r\n            </Link>\r\n          </small>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}