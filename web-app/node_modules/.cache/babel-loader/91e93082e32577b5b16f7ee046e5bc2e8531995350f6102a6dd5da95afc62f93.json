{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/register/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PasswordInput from './PasswordInput';\nimport PreviewImage from './PreviewImage';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  function isValidName(name) {\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/;\n    return nameRegex.test(name);\n  }\n  const [password, setPassword] = useState('');\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [vPassword, setvPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [previewImg, setPreviewImg] = useState('/logo.jpg');\n  const [displayName, setDisplayName] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async event => {\n    if (!isUsernameValid) {\n      alert('Username is not valid!');\n      return;\n    }\n    if (!isPasswordValid) {\n      alert('Password is not valid!');\n      return;\n    }\n    if (password != vPassword) {\n      alert('Passwords are not the same!');\n      return;\n    }\n    if (!isValidName(displayName)) {\n      alert('You must have a display name!');\n      return;\n    }\n    var newUser = {\n      username: username,\n      password: password,\n      displayName: displayName,\n      profilePic: previewImg\n    };\n    const res = await fetch('http://localhost:5000/api/Users', {\n      method: 'post',\n      // send a post request\n      headers: {\n        'Content-Type': 'application/json' // the data (username/password) is in the form of a JSON object\n      },\n\n      body: JSON.stringify(newUser) // The actual data (username/password)\n    });\n\n    if (res.ok) {\n      navigate('/');\n    } else {\n      // Handle error cases\n      alert('username or password are wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"username-class\",\n        id: \"username\",\n        username: username,\n        setUsername: setUsername,\n        setIsUsernameValid: setIsUsernameValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"password\",\n        id: \"password\",\n        password: password,\n        setPassword: setPassword,\n        isPasswordValid: isPasswordValid,\n        setIsPasswordValid: setIsPasswordValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"password_validation\",\n        id: \"password_validation\",\n        password: password,\n        setPassword: setPassword,\n        vPassword: vPassword,\n        setvPassword: setvPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"display-name-class\",\n        id: \"display-name\",\n        displayName: displayName,\n        setDisplayName: setDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PreviewImage, {\n        previewImg: previewImg,\n        setPreviewImg: setPreviewImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-light btn-sm textColor\",\n        id: \"register_button\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"X94NPmGo+ipBd9yFHGla6w8mav4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","PasswordInput","PreviewImage","TextInput","jsxDEV","_jsxDEV","RegisterPage","_s","isValidName","name","nameRegex","test","password","setPassword","isUsernameValid","setIsUsernameValid","isPasswordValid","setIsPasswordValid","vPassword","setvPassword","username","setUsername","previewImg","setPreviewImg","displayName","setDisplayName","navigate","handleRegister","event","alert","newUser","profilePic","res","fetch","method","headers","body","JSON","stringify","ok","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport PasswordInput from './PasswordInput'\r\nimport PreviewImage from './PreviewImage'\r\nimport TextInput from './TextInput'\r\nfunction RegisterPage () {\r\n  function isValidName (name) {\r\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/\r\n    return nameRegex.test(name)\r\n  }\r\n  const [password, setPassword] = useState('')\r\n  const [isUsernameValid, setIsUsernameValid] = useState(false)\r\n  const [isPasswordValid, setIsPasswordValid] = useState(false)\r\n  const [vPassword, setvPassword] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [previewImg, setPreviewImg] = useState('/logo.jpg')\r\n  const [displayName, setDisplayName] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleRegister = async event => {\r\n    if (!isUsernameValid) {\r\n      alert('Username is not valid!')\r\n      return\r\n    }\r\n\r\n    if (!isPasswordValid) {\r\n      alert('Password is not valid!')\r\n      return\r\n    }\r\n    if (password != vPassword) {\r\n      alert('Passwords are not the same!')\r\n      return\r\n    }\r\n    if (!isValidName(displayName)) {\r\n      alert('You must have a display name!')\r\n      return\r\n    }\r\n    var newUser = {\r\n      username: username,\r\n      password: password,\r\n      displayName: displayName,\r\n      profilePic: previewImg\r\n    }\r\n    const res = await fetch('http://localhost:5000/api/Users', {\r\n      method: 'post', // send a post request\r\n      headers: {\r\n        'Content-Type': 'application/json' // the data (username/password) is in the form of a JSON object\r\n      },\r\n      body: JSON.stringify(newUser) // The actual data (username/password)\r\n    })\r\n    if (res.ok) {\r\n      navigate('/')\r\n    } else {\r\n      // Handle error cases\r\n      alert('username or password are wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <form className='login'>\r\n        <TextInput\r\n          className='username-class'\r\n          id='username'\r\n          username={username}\r\n          setUsername={setUsername}\r\n          setIsUsernameValid={setIsUsernameValid}\r\n        />\r\n        <br />\r\n        <PasswordInput\r\n          className='password'\r\n          id='password'\r\n          password={password}\r\n          setPassword={setPassword}\r\n          isPasswordValid={isPasswordValid}\r\n          setIsPasswordValid={setIsPasswordValid}\r\n        />\r\n        <br />\r\n        <PasswordInput\r\n          className='password_validation'\r\n          id='password_validation'\r\n          password={password}\r\n          setPassword={setPassword}\r\n          vPassword={vPassword}\r\n          setvPassword={setvPassword}\r\n        />\r\n        <br />\r\n        <TextInput\r\n          className='display-name-class'\r\n          id='display-name'\r\n          displayName={displayName}\r\n          setDisplayName={setDisplayName}\r\n        />\r\n        <br />\r\n        <PreviewImage previewImg={previewImg} setPreviewImg={setPreviewImg} />\r\n        <br />\r\n        <button\r\n          type='button'\r\n          className='btn btn-outline-light btn-sm textColor'\r\n          id='register_button'\r\n          onClick={handleRegister}\r\n        >\r\n          Register\r\n        </button>{' '}\r\n        <br />\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}