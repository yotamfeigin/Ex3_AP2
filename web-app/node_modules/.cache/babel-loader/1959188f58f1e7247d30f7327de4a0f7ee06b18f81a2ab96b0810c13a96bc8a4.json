{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/register/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PasswordInput from \"./PasswordInput\";\nimport PreviewImage from \"./PreviewImage\";\nimport TextInput from \"./TextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  function isValidName(name) {\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/;\n    return nameRegex.test(name);\n  }\n  const [password, setPassword] = useState('');\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [vPassword, setvPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [previewImg, setPreviewImg] = useState(\"/logo.jpg\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegister = async event => {\n    if (!isUsernameValid) {\n      alert(\"Username is not valid!\");\n      return;\n    }\n    if (!isPasswordValid) {\n      alert(\"Password is not valid!\");\n      return;\n    }\n    if (password != vPassword) {\n      alert(\"Passwords are not the same!\");\n      return;\n    }\n    if (!isValidName(displayName)) {\n      alert(\"You must have a display name!\");\n      return;\n    }\n    var newUser = {\n      \"username\": username,\n      \"password\": password,\n      \"displayName\": displayName,\n      \"profilePic\": previewImg\n    };\n    const res = await fetch('http://localhost:5000/api/Users', {\n      'method': 'post',\n      // send a post request\n      'headers': {\n        'Content-Type': 'application/json' // the data (username/password) is in the form of a JSON object\n      },\n\n      'body': JSON.stringify(newUser) // The actual data (username/password)\n    });\n\n    if (res.ok) {\n      navigate(\"/\");\n    } else {\n      // Handle error cases\n      alert(\"username or password are wrong\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"username-class\",\n        id: \"username\",\n        username: username,\n        setUsername: setUsername,\n        setIsUsernameValid: setIsUsernameValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"password\",\n        id: \"password\",\n        password: password,\n        setPassword: setPassword,\n        isPasswordValid: isPasswordValid,\n        setIsPasswordValid: setIsPasswordValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"password_validation\",\n        id: \"password_validation\",\n        password: password,\n        setPassword: setPassword,\n        vPassword: vPassword,\n        setvPassword: setvPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"display-name-class\",\n        id: \"display-name\",\n        displayName: displayName,\n        setDisplayName: setDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PreviewImage, {\n        previewImg: previewImg,\n        setPreviewImg: setPreviewImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-light btn-sm textColor\",\n        id: \"register_button\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 148\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"WNarCLFV3saKAofnxHIhLaAljh4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","PasswordInput","PreviewImage","TextInput","jsxDEV","_jsxDEV","RegisterPage","_s","isValidName","name","nameRegex","test","password","setPassword","isUsernameValid","setIsUsernameValid","isPasswordValid","setIsPasswordValid","vPassword","setvPassword","username","setUsername","previewImg","setPreviewImg","displayName","setDisplayName","navigate","handleRegister","event","alert","newUser","res","fetch","JSON","stringify","ok","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/mnt/c/Users/yuval/Documents/GitHub/ex2_mitkadem2/web-app/src/register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport PasswordInput from \"./PasswordInput\";\r\nimport PreviewImage from \"./PreviewImage\";\r\nimport TextInput from \"./TextInput\";\r\nfunction RegisterPage(){\r\n\r\n  function isValidName(name) {\r\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/;\r\n    return nameRegex.test(name);\r\n  }\r\n  const [password, setPassword] = useState('');\r\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\r\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\r\n  const [vPassword, setvPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [previewImg, setPreviewImg] = useState(\"/logo.jpg\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n    const handleRegister = async (event) =>{\r\n        if(!isUsernameValid){\r\n          alert(\"Username is not valid!\");\r\n          return;\r\n        }\r\n        \r\n        if(!isPasswordValid){\r\n          alert(\"Password is not valid!\");\r\n          return;\r\n        }\r\n        if(password != vPassword){\r\n          alert(\"Passwords are not the same!\");\r\n          return;\r\n        }\r\n        if(!isValidName(displayName)){\r\n          alert(\"You must have a display name!\")\r\n          return;\r\n        }\r\n        var newUser = {\r\n          \"username\":username,\r\n           \"password\":password,\r\n           \"displayName\":displayName,\r\n           \"profilePic\":previewImg,\r\n          };\r\n          const res = await fetch('http://localhost:5000/api/Users', {\r\n            'method': 'post', // send a post request\r\n            'headers': {\r\n            'Content-Type': 'application/json', // the data (username/password) is in the form of a JSON object\r\n            },\r\n            'body': JSON.stringify(newUser) // The actual data (username/password)\r\n            }\r\n            )\r\n            if (res.ok) {\r\n             navigate(\"/\");\r\n            } else {\r\n              // Handle error cases\r\n              alert(\"username or password are wrong\")\r\n            }\r\n           \r\n    }\r\n\r\n\r\n    return (\r\n        <main>\r\n        <form className=\"login\" >\r\n          <TextInput className=\"username-class\" id=\"username\" username={username} setUsername={setUsername} setIsUsernameValid={setIsUsernameValid} />\r\n          <br/>\r\n          <PasswordInput className=\"password\" id=\"password\" password={password} setPassword={setPassword} isPasswordValid={isPasswordValid} setIsPasswordValid={setIsPasswordValid} />\r\n          <br/>\r\n          <PasswordInput className=\"password_validation\" id=\"password_validation\" password={password} setPassword={setPassword} vPassword={vPassword} setvPassword={setvPassword} />\r\n          <br/>\r\n          <TextInput className=\"display-name-class\" id=\"display-name\" displayName={displayName} setDisplayName={setDisplayName} />\r\n          <br/>\r\n          <PreviewImage previewImg={previewImg} setPreviewImg={setPreviewImg} />\r\n          <br/>\r\n          <button type=\"button\" className=\"btn btn-outline-light btn-sm textColor\" id=\"register_button\" onClick={handleRegister}>Register</button> <br />      \r\n        </form>\r\n        \r\n      </main>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}