{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuval\\\\Documents\\\\GitHub\\\\ex1_b\\\\web-app\\\\src\\\\register\\\\PasswordInput.js\";\nimport $, { event } from 'jquery';\nimport React, { useState } from 'react';\nimport validatePassword from './functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordInput(_ref) {\n  let {\n    className,\n    id,\n    password,\n    setPassword,\n    vPassword,\n    setvPassword\n  } = _ref;\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handlePasswordFocus = event => {\n    $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");\n  };\n  const handlePasswordBlur = event => {\n    if (validatePassword(password) == 'fine') {\n      $('#' + id).css('border', '3px solid green');\n      $('#password-rules').text(\"\");\n    } else if (validatePassword(password) == 'length') {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must be at least 8 characters long\");\n    } else if (validatePassword(password) == 'upper') {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must contain at least one uppercase letter\");\n    } else if (validatePassword(password) == 'lower') {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must contain at least one lowercase letter\");\n    } else if (validatePassword(password) == 'digit') {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must contain at least one digit\");\n    } else if (validatePassword(password) == 'special') {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must contain at least one special character\");\n    } else {\n      $('#' + id).css('border', '3px solid red');\n      $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");\n    }\n  };\n  const handleValidChange = event => {\n    setvPassword(event.target.value);\n  };\n  const handleValidFocus = event => {\n    $('#vPassword-rules').text(\"Re-enter the same password.\");\n  };\n  const handleValidBlur = () => {\n    console.log(password);\n    if (password == vPassword) {\n      if (validatePassword(password) == 'fine') {\n        $('#vPassword-rules').text(\"\");\n        $('#' + id).css('border', '3px solid green');\n      } else {\n        $('#vPassword-rules').text(\"\");\n        $('#' + id).css('border', '3px solid red');\n      }\n    } else {\n      $('#vPassword-rules').text(\"Passwords are not the same!\");\n      $('#' + id).css('border', '3px solid red');\n    }\n  };\n  if (className == \"password\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"textColor\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"password-rules\",\n        className: \"textColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: id,\n        className: \"form-control password\",\n        id: id,\n        placeholder: \"Enter Password\",\n        required: true,\n        pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[^\\\\da-zA-Z]).{8,}$\",\n        title: \"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\",\n        onChange: handlePasswordChange,\n        onFocus: handlePasswordFocus,\n        onBlur: handlePasswordBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  } else if (className == \"password_validation\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: className,\n        className: \"textColor\",\n        children: \"Re-enter Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"vPassword-rules\",\n        className: \"textColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: id,\n        className: \"form-control password_validation\",\n        id: id,\n        placeholder: \"Re-enter Password:\",\n        required: true,\n        pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[^\\\\da-zA-Z]).{8,}$\",\n        title: \"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\",\n        onChange: handleValidChange,\n        onFocus: handleValidFocus,\n        onBlur: handleValidBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = PasswordInput;\nexport default PasswordInput;\nvar _c;\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["$","event","React","useState","validatePassword","jsxDEV","_jsxDEV","PasswordInput","_ref","className","id","password","setPassword","vPassword","setvPassword","handlePasswordChange","target","value","handlePasswordFocus","text","handlePasswordBlur","css","handleValidChange","handleValidFocus","handleValidBlur","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","pattern","title","onChange","onFocus","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/yuval/Documents/GitHub/ex1_b/web-app/src/register/PasswordInput.js"],"sourcesContent":["import $, { event } from 'jquery';\r\nimport React, { useState } from 'react';\r\nimport validatePassword from './functions';\r\n\r\n\r\n\r\nfunction PasswordInput({ className, id, password, setPassword, vPassword, setvPassword }) {\r\n   \r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handlePasswordFocus = (event) => {\r\n        $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");  \r\n    }\r\n\r\n    const handlePasswordBlur = (event) => {\r\n    \r\n        if(validatePassword(password) == 'fine') {\r\n            $('#' + id).css('border', '3px solid green');\r\n            $('#password-rules').text(\"\");\r\n        } else if (validatePassword(password) == 'length') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must be at least 8 characters long\");\r\n        } else if (validatePassword(password) == 'upper'){\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one uppercase letter\");\r\n        } else if (validatePassword(password) == 'lower'){\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one lowercase letter\");\r\n        } else if (validatePassword(password) == 'digit'){\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one digit\");\r\n        } else if (validatePassword(password) == 'special'){\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one special character\");\r\n        }\r\n         else {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");\r\n        }\r\n        \r\n    }\r\n\r\n    const handleValidChange = (event) => {\r\n        setvPassword(event.target.value);\r\n    }\r\n\r\n    const handleValidFocus = (event) => {\r\n        $('#vPassword-rules').text(\"Re-enter the same password.\")\r\n    }\r\n\r\n    const handleValidBlur = () => {\r\n       console.log(password)\r\n        if(password == vPassword) {\r\n            if(validatePassword(password) == 'fine'){\r\n                $('#vPassword-rules').text(\"\");\r\n                $('#' + id).css('border', '3px solid green');\r\n            } else {\r\n                $('#vPassword-rules').text(\"\");\r\n                $('#' + id).css('border', '3px solid red');\r\n            }\r\n        } else {\r\n            $('#vPassword-rules').text(\"Passwords are not the same!\");\r\n            $('#' + id).css('border', '3px solid red');\r\n        }\r\n    }\r\n\r\n    if (className == \"password\") {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"textColor\">\r\n                    Password\r\n                </label>\r\n                <div id=\"password-rules\" className=\"textColor\"></div>\r\n                <input\r\n                    type=\"password\"\r\n                    name={id}\r\n                    className=\"form-control password\"\r\n                    id={id}\r\n                    placeholder=\"Enter Password\"\r\n                    required\r\n                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,}$\"\r\n                    title=\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\"\r\n                    onChange={handlePasswordChange}\r\n                    onFocus={handlePasswordFocus}\r\n                    onBlur={handlePasswordBlur}\r\n                />\r\n            </div>\r\n        )\r\n    } else if (className == \"password_validation\") {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor={className}\r\n                    className=\"textColor\">\r\n                    Re-enter Password:\r\n                </label>\r\n                <div id=\"vPassword-rules\" className=\"textColor\"></div>\r\n                <input type=\"password\"\r\n                    name={id}\r\n                    className=\"form-control password_validation\"\r\n                    id={id}\r\n                    placeholder=\"Re-enter Password:\"\r\n                    required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,}$\"\r\n                    title=\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\"\r\n                    onChange={handleValidChange}\r\n                    onFocus={handleValidFocus} \r\n                    onBlur={handleValidBlur} />\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PasswordInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}