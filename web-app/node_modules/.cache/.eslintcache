[{"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\index.js":"1","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\App.js":"2","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\login\\LoginPage.js":"3","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\RegisterPage.js":"4","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\ChatPage.js":"5","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\TextInput.js":"6","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\PasswordInput.js":"7","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\PreviewImage.js":"8","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\MyProfile.js":"9","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\BubbleChat.js":"10","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\Contact.js":"11","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\SendBox.js":"12","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\functions.js":"13"},{"size":1082,"mtime":1684041944701,"results":"14","hashOfConfig":"15"},{"size":2017,"mtime":1685975042112,"results":"16","hashOfConfig":"15"},{"size":2849,"mtime":1685975593243,"results":"17","hashOfConfig":"15"},{"size":3246,"mtime":1685616418851,"results":"18","hashOfConfig":"15"},{"size":8025,"mtime":1685975523041,"results":"19","hashOfConfig":"15"},{"size":5269,"mtime":1685616418853,"results":"20","hashOfConfig":"15"},{"size":6162,"mtime":1685616418849,"results":"21","hashOfConfig":"15"},{"size":1003,"mtime":1685362039016,"results":"22","hashOfConfig":"15"},{"size":278,"mtime":1684041944696,"results":"23","hashOfConfig":"15"},{"size":670,"mtime":1685616418843,"results":"24","hashOfConfig":"15"},{"size":2571,"mtime":1685975564997,"results":"25","hashOfConfig":"15"},{"size":1233,"mtime":1685616418847,"results":"26","hashOfConfig":"15"},{"size":2131,"mtime":1685616418854,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"14vb7oh",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\index.js",[],[],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\App.js",["72"],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\login\\LoginPage.js",["73","74","75"],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\RegisterPage.js",["76"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport PasswordInput from \"./PasswordInput\";\r\nimport PreviewImage from \"./PreviewImage\";\r\nimport TextInput from \"./TextInput\";\r\nfunction RegisterPage(){\r\n\r\n  function isValidName(name) {\r\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/;\r\n    return nameRegex.test(name);\r\n  }\r\n  const [password, setPassword] = useState('');\r\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\r\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\r\n  const [vPassword, setvPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [previewImg, setPreviewImg] = useState(\"/logo.jpg\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n    const handleRegister = async (event) =>{\r\n        if(!isUsernameValid){\r\n          alert(\"Username is not valid!\");\r\n          return;\r\n        }\r\n        \r\n        if(!isPasswordValid){\r\n          alert(\"Password is not valid!\");\r\n          return;\r\n        }\r\n        if(password != vPassword){\r\n          alert(\"Passwords are not the same!\");\r\n          return;\r\n        }\r\n        if(!isValidName(displayName)){\r\n          alert(\"You must have a display name!\")\r\n          return;\r\n        }\r\n        var newUser = {\r\n          \"username\":username,\r\n           \"password\":password,\r\n           \"displayName\":displayName,\r\n           \"profilePic\":previewImg,\r\n          };\r\n          const res = await fetch('http://localhost:5000/api/Users', {\r\n            'method': 'post', // send a post request\r\n            'headers': {\r\n            'Content-Type': 'application/json', // the data (username/password) is in the form of a JSON object\r\n            },\r\n            'body': JSON.stringify(newUser) // The actual data (username/password)\r\n            }\r\n            )\r\n            if (res.ok) {\r\n             navigate(\"/\");\r\n            } else {\r\n              // Handle error cases\r\n              alert(\"username or password are wrong\")\r\n            }\r\n           \r\n    }\r\n\r\n\r\n    return (\r\n        <main>\r\n        <form className=\"login\" >\r\n          <TextInput className=\"username-class\" id=\"username\" username={username} setUsername={setUsername} setIsUsernameValid={setIsUsernameValid} />\r\n          <br/>\r\n          <PasswordInput className=\"password\" id=\"password\" password={password} setPassword={setPassword} isPasswordValid={isPasswordValid} setIsPasswordValid={setIsPasswordValid} />\r\n          <br/>\r\n          <PasswordInput className=\"password_validation\" id=\"password_validation\" password={password} setPassword={setPassword} vPassword={vPassword} setvPassword={setvPassword} />\r\n          <br/>\r\n          <TextInput className=\"display-name-class\" id=\"display-name\" displayName={displayName} setDisplayName={setDisplayName} />\r\n          <br/>\r\n          <PreviewImage previewImg={previewImg} setPreviewImg={setPreviewImg} />\r\n          <br/>\r\n          <button type=\"button\" className=\"btn btn-outline-light btn-sm textColor\" id=\"register_button\" onClick={handleRegister}>Register</button> <br />      \r\n        </form>\r\n        \r\n      </main>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\ChatPage.js",["77","78","79","80"],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\TextInput.js",["81","82","83","84","85","86","87","88","89"],[],"import $, { event } from 'jquery';\r\n\r\n\r\nfunction isValidUsername(input) {\r\n    // Check if input is at least 4 characters long\r\n    if (input.length < 4) {\r\n        return 'short';\r\n    }\r\n\r\n    // Check if input contains only digits and letters\r\n    const regex = /^[a-zA-Z0-9]+$/;\r\n    if (!regex.test(input)) {\r\n        return 'char';\r\n    }\r\n    \r\n\r\n    // If input passes both checks, return true\r\n    return 'fine';\r\n}\r\n\r\nfunction isValidName(name) {\r\n    const nameRegex = /^[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/;\r\n    return nameRegex.test(name);\r\n}\r\n\r\nfunction TextInput({ className, id, username, setUsername, displayName, setDisplayName, setIsUsernameValid }) {\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const handleUsernameFocus = (event) => {\r\n        $('#username-rules').text(\"Username must be 4-20 characters and can only contain letters and numbers.\");\r\n    }\r\n\r\n    const handleUsernameBlur = (event) => {\r\n        var status = isValidUsername(username);\r\n        if (status == 'fine') {\r\n            $('#username-rules').text(\"\");\r\n            $('#' + id).css('border', '3px solid green');\r\n            setIsUsernameValid(true);\r\n        } else if (status == 'short') {\r\n            $('#username-rules').text(\"Username is too short, please add characters\");\r\n            $('#' + id).css('border', '3px solid red');\r\n            setIsUsernameValid(false);\r\n        } else if (status == 'char') {\r\n            $('#username-rules').text(\"Username can only contain letters and numbers\");\r\n            $('#' + id).css('border', '3px solid red');\r\n            setIsUsernameValid(false);\r\n        }\r\n        else if (status == 'taken') {\r\n            $('#username-rules').text(\"Username is already taken\");\r\n            $('#' + id).css('border', '3px solid red');\r\n            setIsUsernameValid(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleDisplayNameChange = (event) => {\r\n        setDisplayName(event.target.value);\r\n    }\r\n\r\n    const handleDisplayNameFocus = (event) => {\r\n        $('#displayName-rules').text(\"This is the name to represent you\");\r\n    }\r\n\r\n    const handleDisplayNameBlur = (event) => {\r\n        var status = isValidName(displayName);\r\n        if (status == true) {\r\n            $('#' + id).css('border', '3px solid green');\r\n            $('#displayName-rules').text(\"\");\r\n        } else {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#displayName-rules').text(\"Not a valid name!\");\r\n        }\r\n    }\r\n\r\n    \r\n    if (className == 'username-class') {\r\n        return (\r\n            <div\r\n                className=\"form-group\">\r\n                <label\r\n                    htmlFor=\"username\"\r\n                    className=\"textColor\">\r\n                    Username:\r\n                </label>\r\n                <div id=\"username-rules\" className=\"textColor\" ></div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control username-class\"\r\n                    name={id}\r\n                    id={id}\r\n                    placeholder=\"Enter Username\"\r\n                    required pattern=\"[a-zA-Z0-9]{4,20}\"\r\n                    title=\"Username must be 4-20 characters and can only contain letters and numbers.\"\r\n                    onChange={handleUsernameChange}\r\n                    onFocus={handleUsernameFocus}\r\n                    onBlur={handleUsernameBlur} />\r\n            </div>\r\n        )\r\n    } else if (className == 'display-name-class') {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label\r\n                    htmlFor=\"display_name\"\r\n                    className=\"textColor\">\r\n                    Display Name:\r\n                </label>\r\n                <div id=\"displayName-rules\" className=\"textColor\" ></div>\r\n                <input type=\"text\"\r\n                    name={id}\r\n                    className=\"form-control display-name-class\"\r\n                    id={id}\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter Display Name\"\r\n                    required pattern=\"[a-zA-Z0-9]+(([',. -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*{4,20}\"\r\n                    title=\"Username must be 4-20 characters and can only contain letters and numbers.\"\r\n                    onChange={handleDisplayNameChange}\r\n                    onFocus={handleDisplayNameFocus}\r\n                    onBlur={handleDisplayNameBlur}\r\n                />\r\n            </div>\r\n        );\r\n    } else if(className == 'username-login') {\r\n        return(\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\" \r\n              className=\"textColor\">\r\n                Username:\r\n                </label>\r\n              <input type=\"text\" \r\n              className=\"form-control username-login\" \r\n              id=\"username\" name=\"username\" \r\n              aria-describedby=\"emailHelp\" \r\n              placeholder=\"Enter username\" \r\n              required pattern=\"[a-zA-Z0-9]{4,20}\" \r\n              title=\"Username must be 4-20 characters and can only contain letters and numbers.\" \r\n              onChange={handleUsernameChange}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\nexport default TextInput;","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\PasswordInput.js",["90","91","92","93","94","95","96","97","98","99","100","101","102"],[],"import $, { event } from 'jquery';\r\nimport React, { useState } from 'react';\r\nimport {validatePassword} from './functions';\r\n\r\n\r\n\r\nfunction PasswordInput({ className, id, password, setPassword, vPassword, setvPassword,  setIsPasswordValid }) {\r\n\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handlePasswordFocus = (event) => {\r\n        $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");\r\n    }\r\n\r\n    const handlePasswordBlur = (event) => {\r\n\r\n        if (validatePassword(password) == 'fine') {\r\n            $('#' + id).css('border', '3px solid green');\r\n            $('#password-rules').text(\"\");\r\n            setIsPasswordValid(true);\r\n        } else if (validatePassword(password) == 'length') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must be at least 8 characters long\");\r\n            setIsPasswordValid(false);\r\n        } else if (validatePassword(password) == 'upper') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one uppercase letter\");\r\n            setIsPasswordValid(false);\r\n        } else if (validatePassword(password) == 'lower') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one lowercase letter\");\r\n            setIsPasswordValid(false);\r\n        } else if (validatePassword(password) == 'digit') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one digit\");\r\n            setIsPasswordValid(false);\r\n        } else if (validatePassword(password) == 'special') {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must contain at least one special character\");\r\n            setIsPasswordValid(false);\r\n        }\r\n        else {\r\n            $('#' + id).css('border', '3px solid red');\r\n            $('#password-rules').text(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\");\r\n            setIsPasswordValid(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleValidChange = (event) => {\r\n        setvPassword(event.target.value);\r\n    }\r\n\r\n    const handleValidFocus = (event) => {\r\n        $('#vPassword-rules').text(\"Re-enter the same password.\")\r\n    }\r\n\r\n    const handleValidBlur = () => {\r\n        if (password == vPassword) {\r\n            if (validatePassword(password) == 'fine') {\r\n                $('#vPassword-rules').text(\"\");\r\n                $('#' + id).css('border', '3px solid green');\r\n            } else {\r\n                $('#vPassword-rules').text(\"\");\r\n                $('#' + id).css('border', '3px solid red');\r\n            }\r\n        } else {\r\n            $('#vPassword-rules').text(\"Passwords are not the same!\");\r\n            $('#' + id).css('border', '3px solid red');\r\n        }\r\n    }\r\n\r\n    if (className == \"password\") {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"textColor\">\r\n                    Password\r\n                </label>\r\n                <div id=\"password-rules\" className=\"textColor\"></div>\r\n                <input\r\n                    type=\"password\"\r\n                    name={id}\r\n                    className=\"form-control password\"\r\n                    id={id}\r\n                    placeholder=\"Enter Password\"\r\n                    required\r\n                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,}$\"\r\n                    title=\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\"\r\n                    onChange={handlePasswordChange}\r\n                    onFocus={handlePasswordFocus}\r\n                    onBlur={handlePasswordBlur}\r\n                />\r\n            </div>\r\n        )\r\n    } else if (className == \"password_validation\") {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor={className}\r\n                    className=\"textColor\">\r\n                    Re-enter Password:\r\n                </label>\r\n                <div id=\"vPassword-rules\" className=\"textColor\"></div>\r\n                <input type=\"password\"\r\n                    name={id}\r\n                    className=\"form-control password_validation\"\r\n                    id={id}\r\n                    placeholder=\"Re-enter Password:\"\r\n                    required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,}$\"\r\n                    title=\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\"\r\n                    onChange={handleValidChange}\r\n                    onFocus={handleValidFocus}\r\n                    onBlur={handleValidBlur} />\r\n\r\n            </div>\r\n        )\r\n    } else if (className == \"password-login\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"password\"\r\n                    className=\"textColor\">\r\n                    Password:\r\n                </label>\r\n                <input type=\"password\"\r\n                    className=\"form-control password-login\"\r\n                    id=\"password\" name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,}$\"\r\n                    title=\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\"\r\n                    onChange={handlePasswordChange}\r\n                />\r\n                <small id=\"exampleInputPassword1\" className=\" textColor\">We'll never share your Password with anyone else.</small>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default PasswordInput;","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\PreviewImage.js",[],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\MyProfile.js",["103"],[],"function MyProfile({picture, name}) {\r\n    return (\r\n        <div id=\"user_profile\">\r\n        <img src={picture} alt=\"profile picture\" className=\"chat_profile_picture\" />\r\n        <b className=\"textColor contatcs_chat\">{name}</b>\r\n    </div>\r\n    )\r\n}\r\nexport default MyProfile;","C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\BubbleChat.js",[],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\Contact.js",["104","105","106"],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\chat\\SendBox.js",[],[],"C:\\Users\\yuval\\Documents\\GitHub\\ex2_mitkadem2\\web-app\\src\\register\\functions.js",[],[],{"ruleId":"107","severity":1,"message":"108","line":14,"column":7,"nodeType":"109","messageId":"110","endLine":14,"endColumn":14},{"ruleId":"107","severity":1,"message":"111","line":57,"column":17,"nodeType":"109","messageId":"110","endLine":57,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":57,"column":27,"nodeType":"109","messageId":"110","endLine":57,"endColumn":38},{"ruleId":"107","severity":1,"message":"113","line":57,"column":40,"nodeType":"109","messageId":"110","endLine":57,"endColumn":50},{"ruleId":"114","severity":1,"message":"115","line":33,"column":21,"nodeType":"116","messageId":"117","endLine":33,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":41,"column":17,"nodeType":"116","messageId":"117","endLine":41,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":59,"column":6,"nodeType":"121","endLine":59,"endColumn":8,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"118","line":127,"column":15,"nodeType":"116","messageId":"117","endLine":127,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":263,"column":13,"nodeType":"125","endLine":267,"endColumn":15},{"ruleId":"107","severity":1,"message":"126","line":1,"column":13,"nodeType":"109","messageId":"110","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":37,"column":20,"nodeType":"116","messageId":"117","endLine":37,"endColumn":22},{"ruleId":"114","severity":1,"message":"118","line":41,"column":27,"nodeType":"116","messageId":"117","endLine":41,"endColumn":29},{"ruleId":"114","severity":1,"message":"118","line":45,"column":27,"nodeType":"116","messageId":"117","endLine":45,"endColumn":29},{"ruleId":"114","severity":1,"message":"118","line":50,"column":25,"nodeType":"116","messageId":"117","endLine":50,"endColumn":27},{"ruleId":"114","severity":1,"message":"118","line":68,"column":20,"nodeType":"116","messageId":"117","endLine":68,"endColumn":22},{"ruleId":"114","severity":1,"message":"118","line":78,"column":19,"nodeType":"116","messageId":"117","endLine":78,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":101,"column":26,"nodeType":"116","messageId":"117","endLine":101,"endColumn":28},{"ruleId":"114","severity":1,"message":"118","line":124,"column":25,"nodeType":"116","messageId":"117","endLine":124,"endColumn":27},{"ruleId":"107","severity":1,"message":"126","line":1,"column":13,"nodeType":"109","messageId":"110","endLine":1,"endColumn":18},{"ruleId":"107","severity":1,"message":"127","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"118","line":20,"column":40,"nodeType":"116","messageId":"117","endLine":20,"endColumn":42},{"ruleId":"114","severity":1,"message":"118","line":24,"column":47,"nodeType":"116","messageId":"117","endLine":24,"endColumn":49},{"ruleId":"114","severity":1,"message":"118","line":28,"column":47,"nodeType":"116","messageId":"117","endLine":28,"endColumn":49},{"ruleId":"114","severity":1,"message":"118","line":32,"column":47,"nodeType":"116","messageId":"117","endLine":32,"endColumn":49},{"ruleId":"114","severity":1,"message":"118","line":36,"column":47,"nodeType":"116","messageId":"117","endLine":36,"endColumn":49},{"ruleId":"114","severity":1,"message":"118","line":40,"column":47,"nodeType":"116","messageId":"117","endLine":40,"endColumn":49},{"ruleId":"114","severity":1,"message":"118","line":62,"column":22,"nodeType":"116","messageId":"117","endLine":62,"endColumn":24},{"ruleId":"114","severity":1,"message":"118","line":63,"column":44,"nodeType":"116","messageId":"117","endLine":63,"endColumn":46},{"ruleId":"114","severity":1,"message":"118","line":76,"column":19,"nodeType":"116","messageId":"117","endLine":76,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":98,"column":26,"nodeType":"116","messageId":"117","endLine":98,"endColumn":28},{"ruleId":"114","severity":1,"message":"118","line":119,"column":26,"nodeType":"116","messageId":"117","endLine":119,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":4,"column":9,"nodeType":"125","endLine":4,"endColumn":85},{"ruleId":"107","severity":1,"message":"128","line":1,"column":22,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"129","line":42,"column":11,"nodeType":"109","messageId":"110","endLine":42,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":85,"column":7,"nodeType":"125","endLine":89,"endColumn":9},"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'displayName' is assigned a value but never used.","'profilePic' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatId', 'getChats', 'getMessages', 'loginStatus', and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["130"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'event' is defined but never used.","'useState' is defined but never used.","'breakLongWord' is defined but never used.","'res' is assigned a value but never used.",{"desc":"131","fix":"132"},"Update the dependencies array to be: [chatId, getChats, getMessages, loginStatus, navigate]",{"range":"133","text":"134"},[1318,1320],"[chatId, getChats, getMessages, loginStatus, navigate]"]